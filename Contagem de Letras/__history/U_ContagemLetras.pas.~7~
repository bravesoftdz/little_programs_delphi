unit U_ContagemLetras;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls;

type
  TF_ContagemLetras = class(TForm)
    pn_resultados: TPanel;
    edt_Frase: TEdit;
    lbl_esta_frase_tem: TLabel;
    lbl_Letras: TLabel;
    lbl_EspacoEmBranco: TLabel;
    lbl_Vogais: TLabel;
    lbl_Consoantes: TLabel;
    lbl_OutrosCaracteres: TLabel;
    lbl_TotalCaractFrase: TLabel;
    lbl_ResLetras: TLabel;
    lbl_ResEspacosBranco: TLabel;
    lbl_ResVogais: TLabel;
    lbl_ResConsoantes: TLabel;
    lbl_ResOutrosCaract: TLabel;
    lbl_ResTotalCaractFrase: TLabel;
    procedure edt_FraseChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  F_ContagemLetras: TF_ContagemLetras;

   

implementation

{$R *.dfm}

procedure TF_ContagemLetras.edt_FraseChange(Sender: TObject);
var
    Letras,
    EspacosEmBranco,
    Vogais,
    Consoantes,
    OutrosCaracteres,
    Cont,
    TamFrase : Integer;
    Frase : String;

begin
   Letras := 0;
EspacosEmBranco := 0;
Vogais := 0;
Consoantes := 0;
OutrosCaracteres := 0;
edt_Frase.Enabled := False;

Frase := UpperCase (Trim (edt_Frase.Text));
TamFrase := Length (Frase);
for Cont := 1 to TamFrase do
begin
if (Frase [Cont] in ['A'..'Z']) then
Inc (Letras);
if (Frase [Cont] = ' ') then
Inc (EspacosEmBranco);
if (Frase [Cont] in ['A', 'E', 'I', 'O', 'U']) then
Inc (Vogais);
if ((Frase [Cont] in ['A'..'Z']) and
(not (Frase [Cont] in ['A', 'E', 'I', 'O', 'U'])))
then
Inc (Consoantes);
if ((not (Frase [Cont] in ['A'..'Z'])) and
(Frase [Cont] <> ' ')) then
Inc (OutrosCaracteres);
lbl_Letras.Caption := IntToStr (Letras);
lbl_EspacoEmBranco.Caption := IntToStr (EspacosEmBranco);
lbl_Vogais.Caption := IntToStr (Vogais);
lbl_Consoantes.Caption := IntToStr (Consoantes);
lbl_OutrosCaracteres.Caption := IntToStr
(OutrosCaracteres);
lbl_TotalCaractFrase.Caption := IntToStr (TamFrase);
end;

end;

end.
